swagger: "2.0"
info:
  version: 1.0.0
  title: Tre-HelloðŸ‘‹
  description: API for connecting the front and back end of the Parsity Agile Trello Clone project to make a working full stack application.
host: localhost:3001
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    get:
      tags:
        - Users
      summary: Get all users
      description: Retrieves a list of all users
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "users": [
                    {
                        "_id": "64370cdb80eec739f8fd598d",
                        "email": "mike@test.com",
                        "organization": "parsity",
                        "createdAt": "2023-04-12T19:56:11.019Z",
                        "updatedAt": "2023-04-12T19:56:11.019Z",
                        "__v": 0
                    },
                    {
                        "_id": "643974f1d11d2d91dea8d458",
                        "email": "nils@test.com",
                        "organization": "parsity",
                        "createdAt": "2023-04-14T15:44:49.855Z",
                        "updatedAt": "2023-04-14T15:44:49.855Z",
                        "__v": 0
                    },
                    {
                        "_id": "643974fad11d2d91dea8d45a",
                        "email": "johnny@test.com",
                        "organization": "parsity",
                        "createdAt": "2023-04-14T15:44:58.254Z",
                        "updatedAt": "2023-04-14T15:44:58.254Z",
                        "__v": 0
                    }
                ]
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /users/signup:
    post:
      tags:
        - Users
      summary: User Signup
      description: Creates a new user account
      parameters:
        - name: body
          in: body
          description: The user's signup information
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: The email of the user
                example: johnny@test.com
              password:
                type: string
                description: The password of the user
                example: password123
              organization:
                type: string
                description: The organization the user is a part of
                example: parsity
            required:
              - email
              - password
              - organization
      responses:
        "201":
          description: 201 response
          examples:
            application/json: |-
              {
                "newUser": {
                    "email": "johnny@test.com",
                    "password": "$2a$12$9OQi7GOTy6qwjdNMj4hFmuxIkvupXjRUNbZWNZLPHvQdgYknRgMK.",
                    "organization": "parsity",
                    "_id": "643974fad11d2d91dea8d45a",
                    "createdAt": "2023-04-14T15:44:58.254Z",
                    "updatedAt": "2023-04-14T15:44:58.254Z",
                    "__v": 0
                },
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0Mzk3NGZhZDExZDJkOTFkZWE4ZDQ1YSIsImlhdCI6MTY4MTQ4NzA5OCwiZXhwIjoxNjg5MjYzMDk4fQ.TfKl5j-hWZpbmYuJjw1BvLV2CFEZcJ7YN7BkPyXvQmU"
              }
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /users/login:
    post:
      tags:
        - Users
      summary: User Login
      description: Logs a user into the system
      parameters:
        - name: body
          in: body
          description: The users login information
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: The email of the user
                example: johnny@test.com
              password:
                type: string
                description: The password of the user
                example: password123
            required:
              - email
              - password
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "user": {
                    "_id": "643974fad11d2d91dea8d45a",
                    "email": "johnny@test.com",
                    "password": "$2a$12$9OQi7GOTy6qwjdNMj4hFmuxIkvupXjRUNbZWNZLPHvQdgYknRgMK.",
                    "organization": "parsity",
                    "createdAt": "2023-04-14T15:44:58.254Z",
                    "updatedAt": "2023-04-14T15:44:58.254Z",
                    "__v": 0
                },
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0Mzk3NGZhZDExZDJkOTFkZWE4ZDQ1YSIsImlhdCI6MTY4MTQ4NzQ1OSwiZXhwIjoxNjg5MjYzNDU5fQ.KJiooKVTEcuhVUkj1UV5HH8mAySLfocTz1jodNB8nz8"
              }
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /users/{userId}:
    patch:
      tags:
        - Users
      summary: Change users organization
      description: Changes the users organization by userId
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: userId
          in: path
          description: ID of the user
          required: true
          type: string
        - name: organization
          in: body
          description: Users current organization
          required: true
          schema:
            type: object
            properties:
              organization:
                type: string
                description: The organization the user wishes to change to
                example: google
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "updatedUser": {
                    "_id": "643974fad11d2d91dea8d45a",
                    "email": "johnny@test.com",
                    "organization": "google",
                    "createdAt": "2023-04-14T15:44:58.254Z",
                    "updatedAt": "2023-04-14T15:57:17.812Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /boards:
    get:
      tags:
        - Boards
      summary: Get all boards
      description: Retrieves a list of all the users boards
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: query
          in: query
          description: Optional query parameter (must specify ?query={query})
          required: false
          type: string
        - name: Sort
          in: query
          description: Optional sort parameter (must specify ?sort=newest, ?sort=oldest, ?sort=alphabetically, or ?sort=reverse-alphabetically)
          required: false
          type: string
        - name: Collection
          in: query
          description: Optional collection parameter (must specify ?collection={category})
          required: false
          type: string
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "boards": [
                    {
                        "_id": "64396f635a3681dae75be086",
                        "userId": "64370cdb80eec739f8fd598d",
                        "title": "board 1",
                        "category": null,
                        "columnInfo": [
                            {
                                "_id": "64396f7c5a3681dae75be089",
                                "boardId": "64396f635a3681dae75be086",
                                "title": "column 1",
                                "cardInfo": [
                                    {
                                        "_id": "64396fb75a3681dae75be091",
                                        "title": "card 1",
                                        "text": "Coding is dificult",
                                        "columnId": "64396f7c5a3681dae75be089",
                                        "label": null,
                                        "labelColor": null,
                                        "description": null,
                                        "createdAt": "2023-04-14T15:22:31.789Z",
                                        "updatedAt": "2023-04-14T15:22:31.789Z",
                                        "__v": 0
                                    },
                                    {
                                        "_id": "64396fbb5a3681dae75be096",
                                        "title": "card 2",
                                        "text": "Coding is dificult",
                                        "columnId": "64396f7c5a3681dae75be089",
                                        "label": null,
                                        "labelColor": null,
                                        "description": null,
                                        "createdAt": "2023-04-14T15:22:35.262Z",
                                        "updatedAt": "2023-04-14T15:22:35.262Z",
                                        "__v": 0
                                    },
                                    {
                                        "_id": "64396fbe5a3681dae75be09b",
                                        "title": "card 3",
                                        "text": "Coding is dificult",
                                        "columnId": "64396f7c5a3681dae75be089",
                                        "label": null,
                                        "labelColor": null,
                                        "description": null,
                                        "createdAt": "2023-04-14T15:22:38.091Z",
                                        "updatedAt": "2023-04-14T15:22:38.091Z",
                                        "__v": 0
                                    }
                                ],
                                "createdAt": "2023-04-14T15:21:32.831Z",
                                "updatedAt": "2023-04-14T15:22:38.097Z",
                                "__v": 3
                            }
                        ],
                        "createdAt": "2023-04-14T15:21:07.211Z",
                        "updatedAt": "2023-04-14T15:21:32.836Z",
                        "__v": 1
                    },
                    {
                        "_id": "64397c693953c18e36998a4d",
                        "userId": "64370cdb80eec739f8fd598d",
                        "title": "board 2",
                        "category": null,
                        "columnInfo": [],
                        "createdAt": "2023-04-14T16:16:41.674Z",
                        "updatedAt": "2023-04-14T16:16:41.674Z",
                        "__v": 0
                    }
                ]
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    post:
      tags:
        - Boards
      summary: Create a new board
      description: Creates a new board for the user
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: title
          in: body
          description: Title of the board that needs to be added
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
                description: The title of the board created.
                example: board 2
      responses:
        "201":
          description: 201 response
          examples:
            application/json: |-
              {
                "newBoard": {
                    "userId": "64370cdb80eec739f8fd598d",
                    "title": "board 2",
                    "category": null,
                    "columnInfo": [],
                    "_id": "64397d363953c18e36998a58",
                    "createdAt": "2023-04-14T16:20:06.131Z",
                    "updatedAt": "2023-04-14T16:20:06.131Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /boards/{boardId}:
    get:
      tags:
        - Boards
      summary: Get a users board
      description: Retrieves a users board by ID.
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: boardId
          in: path
          description: ID of the board to retrieve
          required: true
          type: string
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "board": {
                    "_id": "64396f635a3681dae75be086",
                    "userId": "64370cdb80eec739f8fd598d",
                    "title": "board 1",
                    "category": null,
                    "columnInfo": [
                        {
                            "_id": "64396f7c5a3681dae75be089",
                            "boardId": "64396f635a3681dae75be086",
                            "title": "column 1",
                            "cardInfo": [
                                {
                                    "_id": "64396fb75a3681dae75be091",
                                    "title": "card 1",
                                    "text": "Coding is dificult",
                                    "columnId": "64396f7c5a3681dae75be089",
                                    "label": null,
                                    "labelColor": null,
                                    "description": null,
                                    "createdAt": "2023-04-14T15:22:31.789Z",
                                    "updatedAt": "2023-04-14T15:22:31.789Z",
                                    "__v": 0
                                },
                                {
                                    "_id": "64396fbb5a3681dae75be096",
                                    "title": "card 2",
                                    "text": "Coding is dificult",
                                    "columnId": "64396f7c5a3681dae75be089",
                                    "label": null,
                                    "labelColor": null,
                                    "description": null,
                                    "createdAt": "2023-04-14T15:22:35.262Z",
                                    "updatedAt": "2023-04-14T15:22:35.262Z",
                                    "__v": 0
                                },
                                {
                                    "_id": "64396fbe5a3681dae75be09b",
                                    "title": "card 3",
                                    "text": "Coding is dificult",
                                    "columnId": "64396f7c5a3681dae75be089",
                                    "label": null,
                                    "labelColor": null,
                                    "description": null,
                                    "createdAt": "2023-04-14T15:22:38.091Z",
                                    "updatedAt": "2023-04-14T15:22:38.091Z",
                                    "__v": 0
                                }
                            ],
                            "createdAt": "2023-04-14T15:21:32.831Z",
                            "updatedAt": "2023-04-14T15:22:38.097Z",
                            "__v": 3
                        }
                    ],
                    "createdAt": "2023-04-14T15:21:07.211Z",
                    "updatedAt": "2023-04-14T15:21:32.836Z",
                    "__v": 1
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Boards
      summary: Deletes a users board
      description: Deletes a users board by ID
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: boardId
          in: path
          description: ID of the board to delete
          required: true
          type: string
        - name: Query
          in: query
          description: Optional query parameter (must specify ?columnId={columnId})
          required: false
          type: string
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "message": "board deleted"
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /boards/title/{boardId}:
    patch:
      tags:
        - Boards
      summary: Changes board title
      description: Changes a single boards title by ID.
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: boardId
          in: path
          description: ID of the board to change title
          required: true
          type: string
        - name: title
          in: body
          description: New title object
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
                example: new board title
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "updatedBoard": {
                    "_id": "64396f635a3681dae75be086",
                    "userId": "64370cdb80eec739f8fd598d",
                    "title": "new board title",
                    "category": null,
                    "columnInfo": [
                        {
                            "_id": "64396f7c5a3681dae75be089",
                            "boardId": "64396f635a3681dae75be086",
                            "title": "column 1",
                            "cardInfo": [
                                {
                                    "_id": "64396fb75a3681dae75be091",
                                    "title": "card 1",
                                    "text": "Coding is dificult",
                                    "columnId": "64396f7c5a3681dae75be089",
                                    "label": null,
                                    "labelColor": null,
                                    "description": null,
                                    "createdAt": "2023-04-14T15:22:31.789Z",
                                    "updatedAt": "2023-04-14T15:22:31.789Z",
                                    "__v": 0
                                },
                                {
                                    "_id": "64396fbb5a3681dae75be096",
                                    "title": "card 2",
                                    "text": "Coding is dificult",
                                    "columnId": "64396f7c5a3681dae75be089",
                                    "label": null,
                                    "labelColor": null,
                                    "description": null,
                                    "createdAt": "2023-04-14T15:22:35.262Z",
                                    "updatedAt": "2023-04-14T15:22:35.262Z",
                                    "__v": 0
                                },
                                {
                                    "_id": "64396fbe5a3681dae75be09b",
                                    "title": "card 3",
                                    "text": "Coding is dificult",
                                    "columnId": "64396f7c5a3681dae75be089",
                                    "label": null,
                                    "labelColor": null,
                                    "description": null,
                                    "createdAt": "2023-04-14T15:22:38.091Z",
                                    "updatedAt": "2023-04-14T15:22:38.091Z",
                                    "__v": 0
                                }
                            ],
                            "createdAt": "2023-04-14T15:21:32.831Z",
                            "updatedAt": "2023-04-14T15:22:38.097Z",
                            "__v": 3
                        }
                    ],
                    "createdAt": "2023-04-14T15:21:07.211Z",
                    "updatedAt": "2023-04-14T16:41:15.795Z",
                    "__v": 1
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /boards/collection/{boardId}:
    patch:
      tags:
        - Boards
      summary: Changes boards collection
      description: Changes a single boards collection by ID
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: boardId
          in: path
          description: ID of the board to change collection
          required: true
          type: string
        - name: collection
          in: body
          description: new board collection name
          required: true
          schema:
            type: object
            properties:
              collection:
                type: string
                description: The column id associated with that board id
                example: new board collection
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "updatedBoard": {
                    "_id": "64396f635a3681dae75be086",
                    "userId": "64370cdb80eec739f8fd598d",
                    "title": "new board title",
                    "category": "new board collection",
                    "columnInfo": [
                        {
                            "_id": "64396f7c5a3681dae75be089",
                            "boardId": "64396f635a3681dae75be086",
                            "title": "column 1",
                            "cardInfo": [
                                {
                                    "_id": "64396fb75a3681dae75be091",
                                    "title": "card 1",
                                    "text": "Coding is dificult",
                                    "columnId": "64396f7c5a3681dae75be089",
                                    "label": null,
                                    "labelColor": null,
                                    "description": null,
                                    "createdAt": "2023-04-14T15:22:31.789Z",
                                    "updatedAt": "2023-04-14T15:22:31.789Z",
                                    "__v": 0
                                },
                                {
                                    "_id": "64396fbb5a3681dae75be096",
                                    "title": "card 2",
                                    "text": "Coding is dificult",
                                    "columnId": "64396f7c5a3681dae75be089",
                                    "label": null,
                                    "labelColor": null,
                                    "description": null,
                                    "createdAt": "2023-04-14T15:22:35.262Z",
                                    "updatedAt": "2023-04-14T15:22:35.262Z",
                                    "__v": 0
                                },
                                {
                                    "_id": "64396fbe5a3681dae75be09b",
                                    "title": "card 3",
                                    "text": "Coding is dificult",
                                    "columnId": "64396f7c5a3681dae75be089",
                                    "label": null,
                                    "labelColor": null,
                                    "description": null,
                                    "createdAt": "2023-04-14T15:22:38.091Z",
                                    "updatedAt": "2023-04-14T15:22:38.091Z",
                                    "__v": 0
                                }
                            ],
                            "createdAt": "2023-04-14T15:21:32.831Z",
                            "updatedAt": "2023-04-14T15:22:38.097Z",
                            "__v": 3
                        }
                    ],
                    "createdAt": "2023-04-14T15:21:07.211Z",
                    "updatedAt": "2023-04-14T16:45:05.589Z",
                    "__v": 1
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /boards/column-reorder/{boardId}:
    patch:
      tags:
        - Boards
      summary: Changes boards column order
      description: Changes a single boards column order by ID
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: boardId
          in: path
          description: ID of the board to change column order
          required: true
          type: string
        - name: newColumnOrder
          in: body
          description: Boards new column order array
          required: true
          schema:
            type: object
            properties:
              newColumnOrder:
                type: array
                items:
                  type: string
                description: The column id associated with that board id .
                example:
                  [
                    "64398416b75d0784c6915add",
                    "64398413b75d0784c6915ad8",
                    "6439840fb75d0784c6915ad3",
                  ]
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "updatedBoard": {
                    "_id": "643983f5b75d0784c6915ad0",
                    "userId": "64370cdb80eec739f8fd598d",
                    "title": "board 1",
                    "category": null,
                    "columnInfo": [
                        {
                            "_id": "64398416b75d0784c6915add",
                            "boardId": "643983f5b75d0784c6915ad0",
                            "title": "column 3",
                            "cardInfo": [],
                            "createdAt": "2023-04-14T16:49:26.754Z",
                            "updatedAt": "2023-04-14T16:49:26.754Z",
                            "__v": 0
                        },
                        {
                            "_id": "64398413b75d0784c6915ad8",
                            "boardId": "643983f5b75d0784c6915ad0",
                            "title": "column 2",
                            "cardInfo": [],
                            "createdAt": "2023-04-14T16:49:23.582Z",
                            "updatedAt": "2023-04-14T16:49:23.582Z",
                            "__v": 0
                        },
                        {
                            "_id": "6439840fb75d0784c6915ad3",
                            "boardId": "643983f5b75d0784c6915ad0",
                            "title": "column 1",
                            "cardInfo": [],
                            "createdAt": "2023-04-14T16:49:19.746Z",
                            "updatedAt": "2023-04-14T16:49:19.746Z",
                            "__v": 0
                        }
                    ],
                    "createdAt": "2023-04-14T16:48:53.375Z",
                    "updatedAt": "2023-04-14T16:51:35.590Z",
                    "__v": 3
                }
              }
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /columns:
    post:
      tags:
        - Columns
      summary: Create a column
      description: Creates a new column in a users board
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: title, boardId
          in: body
          description: New column title and associated board id
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
                description: The title of the column created
                example: Column 1
              boardId:
                type: string
                description: The board id associated with that column.
                example: 643a8fc98378d10c769ed0b5
      responses:
        "201":
          description: 201 response
          examples:
            application/json: |-
              {
                "newColumn": {
                    "boardId": "643a8fc98378d10c769ed0b5",
                    "title": "column 1",
                    "cardInfo": [],
                    "_id": "643a8fde8378d10c769ed0b8",
                    "createdAt": "2023-04-15T11:51:58.939Z",
                    "updatedAt": "2023-04-15T11:51:58.939Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /columns/{columnId}:
    get:
      tags:
        - Columns
      summary: Get a column
      description: Retrieves a single column by ID
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: columnId
          in: path
          description: ID of the column to get
          required: true
          type: string
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "column": {
                    "_id": "643a8fde8378d10c769ed0b8",
                    "boardId": "643a8fc98378d10c769ed0b5",
                    "title": "column 1",
                    "cardInfo": [],
                    "createdAt": "2023-04-15T11:51:58.939Z",
                    "updatedAt": "2023-04-15T11:51:58.939Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Columns
      summary: Update column title
      description: Update a boards column title
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: columnId
          in: path
          description: ID of the column to update
          required: true
          type: string
        - name: title
          in: body
          description: New column title
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
                example: new column 1
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "updatedColumn": {
                    "_id": "643a8fde8378d10c769ed0b8",
                    "boardId": "643a8fc98378d10c769ed0b5",
                    "title": "new column 1",
                    "cardInfo": [],
                    "createdAt": "2023-04-15T11:51:58.939Z",
                    "updatedAt": "2023-04-15T14:32:50.875Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /columns/all/{boardId}:
    get:
      tags:
        - Columns
      summary: Get all columns in a board
      description: Retrieves all columns in a single board
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: boardId
          in: path
          description: ID of the board
          required: true
          type: string
        - name: sort
          in: query
          description: optional sort parameter (must specify ?sort=newest, ?sort=oldest, ?sort=alphabetically, or ?sort=reverse-alphabetically)
          required: false
          type: string
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "columns": [
                    {
                        "_id": "643ab7698378d10c769ed0c4",
                        "boardId": "643ab74e8378d10c769ed0c1",
                        "title": "column 1",
                        "cardInfo": [
                            {
                                "_id": "643ab7af8378d10c769ed0d6",
                                "title": "card 1",
                                "text": "hello",
                                "columnId": "643ab7698378d10c769ed0c4",
                                "label": null,
                                "labelColor": null,
                                "description": null,
                                "createdAt": "2023-04-15T14:41:51.108Z",
                                "updatedAt": "2023-04-15T14:41:51.108Z",
                                "__v": 0
                            }
                        ],
                        "createdAt": "2023-04-15T14:40:41.687Z",
                        "updatedAt": "2023-04-15T14:41:51.112Z",
                        "__v": 1
                    },
                    {
                        "_id": "643ab76c8378d10c769ed0c9",
                        "boardId": "643ab74e8378d10c769ed0c1",
                        "title": "column 2",
                        "cardInfo": [
                            {
                                "_id": "643ab7b98378d10c769ed0db",
                                "title": "card 1",
                                "text": "hi",
                                "columnId": "643ab76c8378d10c769ed0c9",
                                "label": null,
                                "labelColor": null,
                                "description": null,
                                "createdAt": "2023-04-15T14:42:01.232Z",
                                "updatedAt": "2023-04-15T14:42:01.232Z",
                                "__v": 0
                            }
                        ],
                        "createdAt": "2023-04-15T14:40:44.986Z",
                        "updatedAt": "2023-04-15T14:42:01.239Z",
                        "__v": 1
                    },
                    {
                        "_id": "643ab76f8378d10c769ed0ce",
                        "boardId": "643ab74e8378d10c769ed0c1",
                        "title": "column 3",
                        "cardInfo": [],
                        "createdAt": "2023-04-15T14:40:47.989Z",
                        "updatedAt": "2023-04-15T14:40:47.989Z",
                        "__v": 0
                    }
                ]
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /columns/{columnId}/{boardId}:
    delete:
      tags:
        - Columns
      summary: Delete a column in a board
      description: Deletes a single column in a specific board by ID
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: columnId
          in: path
          description: ID of the column to delete
          required: true
          type: string
        - name: boardId
          in: path
          description: ID of the board
          required: true
          type: string
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "message": "column deleted"
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /cards:
    post:
      tags:
        - Cards
      summary: Create a card
      description: Creates a new card in a specific column
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: title, text, columnId
          in: body
          description: New column title, text, and associated column id
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
                description: The title of the card being created
                example: card 1
              text:
                type: string
                description: The text you wish the card to contain
                example: hello
              columnId:
                type: string
                description: The column id associated with that card
                example: 643ac4ea47c58f1da44903e4
      responses:
        "201":
          description: 201 response
          examples:
            application/json: |-
              {
                "newCard": {
                    "title": "card 1",
                    "text": "hello",
                    "columnId": "643ac4ea47c58f1da44903e4",
                    "label": null,
                    "labelColor": null,
                    "description": null,
                    "_id": "643ac50d47c58f1da44903ee",
                    "createdAt": "2023-04-15T15:38:53.056Z",
                    "updatedAt": "2023-04-15T15:38:53.056Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /cards/{cardId}:
    get:
      tags:
        - Cards
      summary: Get a card
      description: Retrieves a single card by ID
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: cardId
          in: path
          description: ID of the card
          required: true
          type: string
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "card": {
                    "_id": "643ac50d47c58f1da44903ee",
                    "title": "card 1",
                    "text": "hello",
                    "columnId": "643ac4ea47c58f1da44903e4",
                    "label": null,
                    "labelColor": null,
                    "description": null,
                    "createdAt": "2023-04-15T15:38:53.056Z",
                    "updatedAt": "2023-04-15T15:38:53.056Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /cards/{cardId}/{columnId}:
    delete:
      tags:
        - Cards
      summary: Delete a card
      description: Deletes a single card in a column by Id
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: cardId
          in: path
          description: ID of the card to delete
          required: true
          type: string
        - name: columnId
          in: path
          description: ID of the column
          required: true
          type: string
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "message": "card deleted"
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /cards/all/{columnId}:
    get:
      tags:
        - Cards
      summary: Get all cards in a column
      description: Retrieves all cards in a column by id
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: columnId
          in: path
          description: ID of the column
          required: true
          type: string
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "cards": [
                    {
                        "_id": "643ac50447c58f1da44903e9",
                        "title": "card 1",
                        "text": "hello",
                        "columnId": "643ac4ea47c58f1da44903e4",
                        "label": null,
                        "labelColor": null,
                        "description": null,
                        "createdAt": "2023-04-15T15:38:44.813Z",
                        "updatedAt": "2023-04-15T15:38:44.813Z",
                        "__v": 0
                    },
                    {
                        "_id": "643ac50d47c58f1da44903ee",
                        "title": "card 2",
                        "text": "hi there",
                        "columnId": "643ac4ea47c58f1da44903e4",
                        "label": null,
                        "labelColor": null,
                        "description": null,
                        "createdAt": "2023-04-15T15:38:53.056Z",
                        "updatedAt": "2023-04-15T15:38:53.056Z",
                        "__v": 0
                    }
                ]
              }
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /cards/same-reorder:
    patch:
      tags:
        - Cards
      summary: Reorders cards within the same column
      description: Reorders cards within the same column
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: sameColumnId, sameColumnCardIds
          in: body
          description: New array of card ids and current column id
          required: true
          schema:
            type: object
            properties:
              sameColumnId:
                example: 643ac4ea47c58f1da44903e4
              sameColumnCardIds:
                example:
                  [
                    "643acaac47c58f1da4490400",
                    "643ac50d47c58f1da44903ee",
                    "643ac50447c58f1da44903e9",
                  ]
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "message": "column reorder successful",
                "updatedColumn": {
                    "_id": "643ac4ea47c58f1da44903e4",
                    "boardId": "643ac4ce47c58f1da44903e1",
                    "title": "column 1",
                    "cardInfo": [
                        {
                            "_id": "643acaac47c58f1da4490400",
                            "title": "card 3",
                            "text": "bye",
                            "columnId": "643ac4ea47c58f1da44903e4",
                            "label": null,
                            "labelColor": null,
                            "description": null,
                            "createdAt": "2023-04-15T16:02:52.703Z",
                            "updatedAt": "2023-04-15T16:04:40.945Z",
                            "__v": 0
                        },
                        {
                            "_id": "643ac50d47c58f1da44903ee",
                            "title": "card 2",
                            "text": "hi there",
                            "columnId": "643ac4ea47c58f1da44903e4",
                            "label": null,
                            "labelColor": null,
                            "description": null,
                            "createdAt": "2023-04-15T15:38:53.056Z",
                            "updatedAt": "2023-04-15T15:38:53.056Z",
                            "__v": 0
                        },
                        {
                            "_id": "643ac50447c58f1da44903e9",
                            "title": "card 1",
                            "text": "hello",
                            "columnId": "643ac4ea47c58f1da44903e4",
                            "label": null,
                            "labelColor": null,
                            "description": null,
                            "createdAt": "2023-04-15T15:38:44.813Z",
                            "updatedAt": "2023-04-15T15:38:44.813Z",
                            "__v": 0
                        }
                    ],
                    "createdAt": "2023-04-15T15:38:18.061Z",
                    "updatedAt": "2023-04-15T16:06:30.358Z",
                    "__v": 5
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /cards/different-reorder:
    patch:
      tags:
        - Cards
      summary: Reorders cards within a different column
      description: Reorders cards within a different column
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: removedColumnId, addedColumnId, removedColumnCardIds,  addedColumnCardIds
          in: body
          description: Card ids from removed column with that columns id and card ids from added column with that columns id
          required: true
          schema:
            type: object
            properties:
              removedColumnId:
                example: 643aced6c8277b3a702dca4e
              removedColumnCardIds:
                example:
                  ["643acf01c8277b3a702dca58", "643acf0ac8277b3a702dca5d"]
              addedColumnId:
                example: 643ac4ea47c58f1da44903e4
              addedColumnCardIds:
                example:
                  [
                    "643acaac47c58f1da4490400",
                    "643ac50d47c58f1da44903ee",
                    "643acefbc8277b3a702dca53",
                    "643ac50447c58f1da44903e9",
                  ]
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "message": "column reorder successful",
                "updatedRemovedColumn": [
                    {
                        "_id": "643aced6c8277b3a702dca4e",
                        "boardId": "643ac4ce47c58f1da44903e1",
                        "title": "column 2",
                        "cardInfo": [
                            {
                                "_id": "643acf01c8277b3a702dca58",
                                "title": "card 2",
                                "text": "dog",
                                "columnId": "643aced6c8277b3a702dca4e",
                                "label": null,
                                "labelColor": null,
                                "description": null,
                                "createdAt": "2023-04-15T16:21:21.302Z",
                                "updatedAt": "2023-04-15T16:21:21.302Z",
                                "__v": 0
                            },
                            {
                                "_id": "643acf0ac8277b3a702dca5d",
                                "title": "card 3",
                                "text": "weasel",
                                "columnId": "643aced6c8277b3a702dca4e",
                                "label": null,
                                "labelColor": null,
                                "description": null,
                                "createdAt": "2023-04-15T16:21:30.823Z",
                                "updatedAt": "2023-04-15T16:21:30.823Z",
                                "__v": 0
                            }
                        ],
                        "createdAt": "2023-04-15T16:20:38.946Z",
                        "updatedAt": "2023-04-15T16:34:55.748Z",
                        "__v": 4
                    }
                ],
                "updatedAddedColumn": [
                    {
                        "_id": "643ac4ea47c58f1da44903e4",
                        "boardId": "643ac4ce47c58f1da44903e1",
                        "title": "column 1",
                        "cardInfo": [
                            {
                                "_id": "643acaac47c58f1da4490400",
                                "title": "card 3",
                                "text": "bye",
                                "columnId": "643ac4ea47c58f1da44903e4",
                                "label": null,
                                "labelColor": null,
                                "description": null,
                                "createdAt": "2023-04-15T16:02:52.703Z",
                                "updatedAt": "2023-04-15T16:04:40.945Z",
                                "__v": 0
                            },
                            {
                                "_id": "643ac50d47c58f1da44903ee",
                                "title": "card 2",
                                "text": "hi there",
                                "columnId": "643ac4ea47c58f1da44903e4",
                                "label": null,
                                "labelColor": null,
                                "description": null,
                                "createdAt": "2023-04-15T15:38:53.056Z",
                                "updatedAt": "2023-04-15T15:38:53.056Z",
                                "__v": 0
                            },
                            {
                                "_id": "643acefbc8277b3a702dca53",
                                "title": "card 1",
                                "text": "fish",
                                "columnId": "643aced6c8277b3a702dca4e",
                                "label": null,
                                "labelColor": null,
                                "description": null,
                                "createdAt": "2023-04-15T16:21:15.518Z",
                                "updatedAt": "2023-04-15T16:21:15.518Z",
                                "__v": 0
                            },
                            {
                                "_id": "643ac50447c58f1da44903e9",
                                "title": "card 1",
                                "text": "hello",
                                "columnId": "643ac4ea47c58f1da44903e4",
                                "label": null,
                                "labelColor": null,
                                "description": null,
                                "createdAt": "2023-04-15T15:38:44.813Z",
                                "updatedAt": "2023-04-15T15:38:44.813Z",
                                "__v": 0
                            }
                        ],
                        "createdAt": "2023-04-15T15:38:18.061Z",
                        "updatedAt": "2023-04-15T16:34:55.748Z",
                        "__v": 6
                    }
                ]
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /cards/title/{cardId}:
    patch:
      tags:
        - Cards
      summary: Updates a cards title
      description: Updates the cards title by id
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: cardId
          in: path
          description: ID of the card to update
          required: true
          type: string
        - name: title
          in: body
          description: New card title
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
                example: new card title
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "updatedCard": {
                    "_id": "643acf01c8277b3a702dca58",
                    "title": "new card title",
                    "text": "dog",
                    "columnId": "643aced6c8277b3a702dca4e",
                    "label": null,
                    "labelColor": null,
                    "description": null,
                    "createdAt": "2023-04-15T16:21:21.302Z",
                    "updatedAt": "2023-04-15T16:42:08.633Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /cards/text/{cardId}:
    patch:
      tags:
        - Cards
      summary: Updates the cards text
      description: Updates the cards text bi id
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: cardId
          in: path
          description: ID of the card to update
          required: true
          type: string
        - name: text
          in: body
          description: New card text
          required: true
          schema:
            type: object
            properties:
              text:
                type: string
                example: new card text
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "updatedCard": {
                    "_id": "643acf01c8277b3a702dca58",
                    "title": "new card title",
                    "text": "new card text",
                    "columnId": "643aced6c8277b3a702dca4e",
                    "label": null,
                    "labelColor": null,
                    "description": null,
                    "createdAt": "2023-04-15T16:21:21.302Z",
                    "updatedAt": "2023-04-15T16:43:28.806Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /cards/label/{cardId}:
    patch:
      tags:
        - Cards
      summary: Updates the cards label and label color
      description: Updates the cards label and label color by id
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: cardId
          in: path
          description: ID of the card
          required: true
          type: string
        - name: label, labelColor
          in: body
          description: New label and label color
          required: true
          schema:
            type: object
            properties:
              label:
                type: string
                example: new card label
              labelColor:
                type: string
                example: blue
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "updatedCard": {
                    "_id": "643acf01c8277b3a702dca58",
                    "title": "new card title",
                    "text": "new card text",
                    "columnId": "643aced6c8277b3a702dca4e",
                    "label": "new card label",
                    "labelColor": "blue",
                    "description": null,
                    "createdAt": "2023-04-15T16:21:21.302Z",
                    "updatedAt": "2023-04-15T16:46:01.258Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /cards/description/{cardId}:
    patch:
      tags:
        - Cards
      summary: Updates the cards description
      description: Updates the cards description by id
      parameters:
        - name: authorization
          in: header
          description: JWT token for authentication
          required: true
          type: string
        - name: cardId
          in: path
          description: ID of the card
          required: true
          type: string
        - name: description
          in: body
          description: New card description
          required: true
          schema:
            type: object
            properties:
              description:
                type: string
                example: this card is one cool card
      responses:
        "200":
          description: 200 response
          examples:
            application/json: |-
              {
                "updatedCard": {
                    "_id": "643acf01c8277b3a702dca58",
                    "title": "new card title",
                    "text": "new card text",
                    "columnId": "643aced6c8277b3a702dca4e",
                    "label": "new card label",
                    "labelColor": "blue",
                    "description": "this is one cool card",
                    "createdAt": "2023-04-15T16:21:21.302Z",
                    "updatedAt": "2023-04-15T16:48:45.166Z",
                    "__v": 0
                }
              }
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
